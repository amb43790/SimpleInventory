#!/usr/bin/perl

use strict;
use warnings;

use DBI;

use Inventory;

my $test_import = 0;
if (@ARGV) { 
    if ($ARGV[0] eq '--test-import') {
        $test_import = 1;
    } else {
        print STDERR "Unknown parameter $ARGV[0]\n";
        exit 1;
    }
}


my $db = Inventory->connect();
unless ($db) {
    print STDERR "Can't create/connect to DB inventory.sqlite3: ".$DBI::errstr."\n";
    exit 1;
}

$SIG{'INT'} = sub {
    print "Exiting without saving changes...\n";
    $db->rollback;
    exit;
};

$|=1;
my %new_items;

print "Receive order number: ";
chomp(my $order_number = <STDIN>);
my $order = $db->create_order($order_number, 'receive');

while(1) {
    print "Scan...";

    my $barcode = <STDIN>;
    chomp $barcode if $barcode;
    last unless $barcode;

    my $item = $db->lookup_by_barcode($barcode);

    if ($item) {
        $order->receive_item_by_barcode($barcode);

    } else {
        $new_items{$barcode}++;
    }

}

if (my $new_items_count = scalar(keys %new_items)) {
    print STDERR "There were $new_items_count new items\n";

    foreach my $barcode ( keys %new_items ) {
        my $count = $new_items{$barcode};
        print STDERR "\nNew item barcode $barcode ($count items)\n";
        if ($test_import) {
            next;
         }

         print "SKU: ";
         my $sku = <STDIN>;
         chomp $sku;

         print "Description: ";
         my $desc = <STDIN>;
         chomp $desc;

         $db->create_item(barcode => $barcode,
                          sku => $sku,
                          desc => $desc,
                          count => 0,
                         );

        for(my $i = 0; $i < $count; $i++) {
            $order->receive_item_by_barcode($barcode);
        }
    }
}

$order->save();

if ($test_import) {
    $db->dbh->rollback();
    print "Rolling back from test import...\n";
} else {
    $db->dbh->commit();
    print "Changes saved!\n";
}


